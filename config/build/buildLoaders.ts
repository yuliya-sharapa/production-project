import MiniCssExtractPlugin from "mini-css-extract-plugin";
import webpack from "webpack";
import { BuildOptions } from "./types/config";

export default function buildLoaders({isDev} : BuildOptions): webpack.RuleSetRule[] {

  const cssLoader = {
    test: /\.s[ac]ss$/i,
    use: [
      // Creates `style` nodes from JS strings
      isDev ? "style-loader" : MiniCssExtractPlugin.loader,
      // Translates CSS into CommonJS
      {
        loader:"css-loader",
        options: {
          modules: {
            // only files which include .module. will be processed as css modules
          auto: (resPath: string) => Boolean(resPath.includes(".module.")),
          // in prod bundle we ll have autogenerated names of classes and in dev 
          localIdentName : isDev ? "[path][name]__[local]" : "[hasg:base64:8]"
          }
        }
      },
      
      // Compiles Sass to CSS
      "sass-loader",
    ],
  }

  // we would need babel to work with jsx if we didnt have tsloader
  const typescriptLoader = {
    test: /\.tsx?$/,
    use: "ts-loader",
    exclude: /node_modules/,
  };
//   the order of loaders is important
  return [typescriptLoader, cssLoader];
}
